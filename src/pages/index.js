/* eslint-disable react-hooks/exhaustive-deps */
/* eslint-disable react/jsx-key */
import Head from "next/head";
import { useState, useEffect } from "react";
import "@appwrite.io/pink";
import { createAnonymousSession } from "@/utils/web-init";
import { Client, Databases } from "appwrite";
import ReactPlayer from "react-player";
import { generateUsername } from "unique-username-generator";


export default function Home() {
  const [username, setUsername] = useState("");
  const [messages, setMessages] = useState([]);
  const [message, setMessage] = useState("");


  const client = new Client();
  client
    .setEndpoint("https://cloud.appwrite.io/v1")
    .setProject("6418bee334000708b0ce");

  const databases = new Databases(client);

  const createChatIfNotExist = async (e) => {
    console.log("Adding user", message);
    const promise = databases.createDocument(
      "6418bf5a278b4799614b",
      "6418bf6c38a6c826cc21",
      "general-chat",
      {
        username: username,
        messages:[...messages,message]
      }
    );
    promise.then(function (response) {
      console.log("runnner", response); // Success
  }, function (error) {
      console.log(error); // Failure
       databases.updateDocument(
        "6418bf5a278b4799614b",
        "6418bf6c38a6c826cc21",
        "general-chat",
        {
          username: username,
          messages:[...messages,message],
        }
      );
  });
  };

  useEffect(() => {
    if (!username) {
      const _username = localStorage.getItem("username") || generateUsername();
      localStorage.setItem("username", _username);
      console.log(_username);
      setUsername(_username);
    }
  }, [username]);


  const getDocument=async()=>{
    const result =await databases.getDocument(
      "6418bf5a278b4799614b",
      "6418bf6c38a6c826cc21",
      "general-chat"
    );
    return result
  }

  useEffect(() => {
    const run=async()=>{

      const data=await getDocument()
      setMessages(data.messages)
    }
    run()
  }, [])
  

  useEffect(() => {
    console.log("anything")
    // Subscribe to collection channel
    const _subscribe = client.subscribe(
      "databases.6418bf5a278b4799614b.collections.6418bf6c38a6c826cc21.documents",
      (response) => {
        console.log("iiiii",response);
        const { payload } = response;
        if (payload?.$id === "general-chat") {
          setMessages(payload.messages);
        }
       
      }
    );
    return () => {
      _subscribe();
    };
  }, []);

  useEffect(() => {
    createAnonymousSession();
  }, []);

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="container u-height-100-percent u-main-center">
        <div className="u-main-center">
          <ReactPlayer
            style={{ maxWidth: "500px", minHeight: "200px", margin: "auto", paddingBottom: "10px" }}
            url="https://www.youtube.com/watch?v=xO9QDQaVHxU"
          />
        </div>
        <div className="card" style={{ maxWidth: "500px", margin: "auto" }}>
          <div className="">
            <div className="u-text-center u-bold">Classroom Chat</div>
          </div>

          <ul className="u-padding-24" style={{ minHeight: "300px" }}>
            {messages.map((message) => {
              return (
                <li className="message">
                  <div className="message_wrapper">
                    <div>{username}</div>
                    <div className="">{message}</div>
                  </div>
                </li>
              );
            })}
          </ul>

          <div className="">
            <div
              className="u-flex"
              style={{ maxWidth: "400px" }}
            >
              <div className="input">
                <input
                  id="message-text-field"
                  className="u-max-width-500"
                  type="text"
                  placeholder="Type your message here..."
                  value={message}
                  onChange={(e) => setMessage(e.target.value)}
                />
              </div>
              <button
                type="submit"
                className="button"
                onClick={createChatIfNotExist}
              >
                Send
              </button>
            </div>
          </div>
        </div>
      </main>
    </>
  );
}
